<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C# on OJ&#39;s Perspective</title>
    <link>/tags/c#/</link>
    <description>Recent content in C# on OJ&#39;s Perspective</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-au</language>
    <copyright>Copyright OJ Reeves 2019</copyright>
    <lastBuildDate>Wed, 25 Mar 2009 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/c#/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A Quirk in List.Find()</title>
      <link>/posts/a-quirk-in-list.find/</link>
      <pubDate>Wed, 25 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>/posts/a-quirk-in-list.find/</guid>
      <description>&lt;p&gt;Earlier today I was having a chat with a &lt;a href=&#34;http://doomkeeper.com/&#34; title=&#34;Jimmy&#39;s Blog&#34;&gt;friend of mine&lt;/a&gt;, who lives in Vancouver, about finding items that are stored in &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/6sh2ey19.aspx&#34; title=&#34;List(T)&#34;&gt;generic Lists&lt;/a&gt;. He flicked me a code snippet that looked something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;List&amp;lt;foo&amp;gt; list = new List&amp;lt;foo&amp;gt;();
// .. do some stuff
Foo f = list.Find(delegate(Foo f) { return foo.Name == &amp;quot;Bar&amp;quot;; });
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Straight away I fired back with an update to the code which used &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/bb397687.aspx&#34; title=&#34;Lambda Expressions (C# Programming Guide)&#34;&gt;lambda expressions&lt;/a&gt; instead, as I&amp;rsquo;m a fan of how concise they are ;)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How do you Interact with your ViewState?</title>
      <link>/posts/how-do-you-interact-with-your-viewstate/</link>
      <pubDate>Wed, 21 May 2008 00:00:00 +0000</pubDate>
      
      <guid>/posts/how-do-you-interact-with-your-viewstate/</guid>
      <description>&lt;p&gt;There comes a time in every ASP.NET developer&amp;rsquo;s life when the need arises for information to be persisted into &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/ms972976.aspx&#34; title=&#34;ViewState&#34;&gt;ViewState&lt;/a&gt;. For the sake of this post I&amp;rsquo;m not really interested in the reasons why. What I am interested in is &lt;em&gt;how&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;How do you interact with your ViewState?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Extended-Precision Floating-Point Values in the CLR</title>
      <link>/posts/extended-precision-floating-point-values-in-the-clr/</link>
      <pubDate>Wed, 27 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>/posts/extended-precision-floating-point-values-in-the-clr/</guid>
      <description>&lt;p&gt;While at work today I hit a problem that I&amp;rsquo;ve never hit before (which is quite rare these days :) ), and while it was frustrating it was also good to learn about something that I never knew was a problem. If you&amp;rsquo;re having some issues marshalling double-precision floating-point information through managed components to unmanaged components, or you&amp;rsquo;re just interested in learning something new, then read on :)&lt;/p&gt;

&lt;p&gt;Let me start by explaining the scenario:&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>