<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HAProxy on OJ&#39;s Perspective</title>
    <link>/tags/haproxy/</link>
    <description>Recent content in HAProxy on OJ&#39;s Perspective</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-au</language>
    <copyright>Copyright OJ Reeves 2019</copyright>
    <lastBuildDate>Wed, 13 Oct 2010 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/haproxy/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Webmachine, ErlyDTL and Riak - Part 3</title>
      <link>/posts/webmachine-erlydtl-and-riak-part-3/</link>
      <pubDate>Wed, 13 Oct 2010 00:00:00 +0000</pubDate>
      
      <guid>/posts/webmachine-erlydtl-and-riak-part-3/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;/uploads/2010/09/riak-logo.png&#34; alt=&#34;Riak Logo&#34; style=&#34;float:left;padding-right:5px;padding-bottom:5px;&#34;/&gt;For those of you who are new to the series, you may want to check out &lt;a href=&#34;/posts/webmachine-erlydtl-and-riak-part-1/&#34; title=&#34;Wembachine, ErlyDTL and Riak - Part 1&#34;&gt;Part 1&lt;/a&gt; and &lt;a href=&#34;/posts/webmachine-erlydtl-and-riak-part-2/&#34; title=&#34;Webmachine, ErlyDTL and Riak - Part 2&#34;&gt;Part 2&lt;/a&gt; before reading this post. It will help give you some context as well as introduce you to some of the jargon and technology that I&amp;rsquo;m using. If you&amp;rsquo;ve already read then, or don&amp;rsquo;t want to, then please read on!&lt;/p&gt;

&lt;p&gt;This post builds on the previous two, but not without a few little modifications. If you&amp;rsquo;re interested in following along step by step with your own version of the code running, then get yourself a copy of &lt;a href=&#34;https://github.com/OJ/csd/tree/Part2-20110403&#34; title=&#34;Source code for Part 2&#34;&gt;this changeset&lt;/a&gt; before doing so.&lt;/p&gt;

&lt;p&gt;In this post we&amp;rsquo;re going to cover:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A slight refactor of code structure to support the &amp;ldquo;standard&amp;rdquo; approach to building applications in Erlang using OTP.&lt;/li&gt;
&lt;li&gt;Building a small set of modules to talk to &lt;a href=&#34;http://www.basho.com/developers.html#Riak&#34; title=&#34;Riak&#34;&gt;Riak&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Creation of some &lt;a href=&#34;http://json.org/&#34; title=&#34;JavaScript Object Notation&#34;&gt;JSON&lt;/a&gt; helper functions for reading and writing data.&lt;/li&gt;
&lt;li&gt;Calling all the way from the &lt;a href=&#34;http://www.basho.com/developers.html#Webmachine&#34; title=&#34;Webmachine&#34;&gt;Webmachine&lt;/a&gt; front-end to Riak to extract data and display it in a browser using &lt;a href=&#34;http://github.com/evanmiller/erlydtl&#34; title=&#34;ErlyDTL&#34;&gt;ErlyDTL&lt;/a&gt; templates.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There are quite a few code snippets in this post as well as output from script executions and &lt;code&gt;bash&lt;/code&gt; sessions. To avoid confusion, all file listings reference the path to the file that is being modified relative to the root of the project folder.&lt;/p&gt;

&lt;p&gt;Be warned, this is a &lt;em&gt;long&lt;/em&gt; post :) Get yourself a &lt;em&gt;shmoke und a pancake&lt;/em&gt;, a glass of your favourite beverage and put some relaxing music on (instrumental is best).&lt;/p&gt;

&lt;p&gt;Are you ready? OK, here we go &amp;hellip;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Webmachine, ErlyDTL and Riak - Part 2</title>
      <link>/posts/webmachine-erlydtl-and-riak-part-2/</link>
      <pubDate>Sun, 12 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>/posts/webmachine-erlydtl-and-riak-part-2/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;/uploads/2010/09/riak-logo.png&#34; alt=&#34;Riak Logo&#34; style=&#34;float:left;padding-right:5px;padding-bottom:5px;&#34;/&gt;In &lt;a href=&#34;/posts/webmachine-erlydtl-and-riak-part-1/&#34; title=&#34;Wembachine, ErlyDTL and Riak - Part 1&#34;&gt;Part 1&lt;/a&gt; of the series we covered the basics of getting the development environment up and running. We also looked at how to get a really simple ErlyDTL template rendering. If you haven&amp;rsquo;t yet gone through Part 1, I suggest you do that now. If you have, read on!&lt;/p&gt;

&lt;p&gt;There are a few reasons this series is targeting this technology stack. One of them is &lt;strong&gt;uptime&lt;/strong&gt;. We&amp;rsquo;re aiming to build a site that stays up as much as possible. Given that, one of the things that I missed in the previous post was setting up a &lt;a href=&#34;http://en.wikipedia.org/wiki/Load_balancing_(computing)&#34; title=&#34;Load balancing&#34;&gt;load balancer&lt;/a&gt;. Hence this post will attempt to fill that gap.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>